{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","togglemode","role","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","Text","setText","heading","rows","value","onChange","event","target","style","backgroundColor","disabled","length","newtext","toUpperCase","showAlert","lowertext","toLowerCase","class","text","document","getElementById","navigator","clipboard","writeText","newText","split","join","filter","element","Alert","height","alert","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","title","txtarea","querySelector","card","body","color","border","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.da4b7767.chunk.js","sourcesContent":["import React from 'react'\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n     <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"./index.html\"><b>Text Utils</b></a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n  <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"chkbx\" />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" id='chkbx'>Enable {props.mode === \"light\" ? \"dark\" : \"light\"}Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>  \r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    \r\n    function converterUpper(){\r\n    const newtext = Text.toUpperCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Converted to Uppercase\", \"success\");\r\n  }\r\n  \r\n  const converterLower = ()=>{\r\n    const lowertext = Text.toLowerCase();\r\n    setText(lowertext);\r\n    props.showAlert(\"Converted to Lowercase\", \"success\");\r\n\r\n  }\r\n  const clear =()=>{\r\n    setText(\"\");\r\n    props.showAlert(\"Text Area Has Been Cleared\", \"success\");\r\n  }\r\n\r\n\r\n  const handleonchange = (event)=>{\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleonCOpy = ()=>{\r\n    let text = document.getElementById(\"Texts\");\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to Clipboard\", \"success\");  \r\n  }\r\n\r\n  const handeExtraSpace = () => {\r\n    let newText = Text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces Has Been Removed\", \"success\");\r\n  }\r\n  const [Text,setText] = useState(\"Enter Text here\");\r\n  return (\r\n\r\n    <div className='mx-5'>\r\n        <h1 className='mt-5'>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"htmlForm-control w-100 px-2\" id=\"Texts\" rows=\"8\" value={Text} onChange={handleonchange} style={{backgroundColor: props.mode === \"black \" ? \"grey\" : \"white\"}}></textarea>\r\n</div>\r\n<button disabled={Text.length===0} className=\"btn btn-primary my-1\" id=\"btn\" onClick={converterUpper}>Convert to UpperCase</button>\r\n<button disabled={Text.length===0} className=\"btn btn-primary  mx-3 my-1\" id=\"btn\" onClick={converterLower}>Convert to LowerCase</button>\r\n<button disabled={Text.length===0} className=\"btn btn-primary my-1\" id=\"btn\" onClick={clear}><i class=\"bi bi-trash-fill\"></i> Clear</button>\r\n<button disabled={Text.length===0} className=\"btn btn-primary mx-3 my-1\" id=\"btn\" onClick={handleonCOpy}><i class=\"bi bi-clipboard2-fill\"></i> Copy Text</button>\r\n<button disabled={Text.length===0} className=\"btn btn-primary my-1\" id=\"btn\" onClick={handeExtraSpace}><i class=\"bi bi-eraser-fill\"></i> Remove Extra Spaces</button>\r\n<h2 id='summary' className='mt-4'>Your Text Summary:</h2>\r\n<div className=\"card p-3\" id='card'>\r\n        <figure className=\"p-3 mb-0\">\r\n          <blockquote class=\"blockquote\">\r\n            <h5><b>Characters:</b></h5>\r\n            <p>{Text.length}</p>\r\n            <h5><b>Words:</b></h5>\r\n            <p>{Text.split(/\\s+/).filter((element)=>{return element.length!==0}).length}</p>\r\n          </blockquote>\r\n        </figure>\r\n      </div>\r\n      \r\n    </div>\r\n\r\n    \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    <div style={{height: '15px'}}>\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nfunction App() {\n   const [mode, setMode] = useState(\"light\");\n   const [alert, setAlert] = useState(null);\n   const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      });\n      setTimeout(() => {\n        setAlert(null);\n      }, 2000);\n   }\n   const togglemode = ()=>{\n    let txtarea = document.querySelector(\"textarea\");\n    let card = document.getElementById('card')\n    if(mode === \"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\"\n      document.body.style.color = \"white\";\n      txtarea.style.backgroundColor = \"#042743\";\n      txtarea.style.color = \"white\";\n      card.style.backgroundColor = \"#042743\"\n      card.style.border = \"1px solid white\";\n      showAlert(\"Dark Mode Has Been Enabled\", \"success\");\n    }\n    else{\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\"\n      document.body.style.color = \"black\";\n      card.style.backgroundColor = \"white\";\n      card.style.border = \"1px solid black\";\n      txtarea.style.backgroundColor = \"white\";\n      txtarea.style.color = \"black\";\n      showAlert(\"Light Mode Has Been Enabled\", \"success\");\n\n    }\n   }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <Navbar title=\"M.Roshan\" className=\"hello\" mode={mode} togglemode={togglemode}/>\n      <Alert alert={alert} />\n      <div className=\"container\">\n      <Textform showAlert={showAlert} heading=\"Enter the text here to modify: \"/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}